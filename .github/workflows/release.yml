name: Release Desktop

on:
  push:
    tags:
      - '*'

defaults:
  run:
    shell: bash

jobs:
  release_desktop:
    name: Release Desktop App
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Make gradle executable
        run: chmod +x ./gradlew

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build Desktop App
        run: ./gradlew :composeApp:assemble --stacktrace

      - name: Package Desktop App
        run: |
          ./gradlew :composeApp:packageDistributionForCurrentOS

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desktop-${{ matrix.os }}
          path: |
            composeApp/build/**/*.deb
            composeApp/build/**/*.msi
            composeApp/build/**/*.dmg
            composeApp/build/compose/jars/*.jar
          if-no-files-found: ignore

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            composeApp/build/**/*.deb
            composeApp/build/**/*.msi
            composeApp/build/**/*.dmg
            composeApp/build/compose/jars/*.jar
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
